import java.util.Arrays;

public class Test {
    public static void main(String[] args) {
        InputStream is=new BufferedInputStream(new FileInputStream());
        System.out.println(is.read());
        System.out.println(is.read(new Byte[1024]));
    }
}
//共同父类
abstract class InputStream{
    public abstract int read();
    public abstract int read(Byte[] buffer);
}
//原始类
class FileInputStream extends InputStream{

    @Override
    public int read() {
        System.out.println("读取了一个字节a");
        return 97;
    }

    @Override
    public int read(Byte[] buffer) {
        buffer[0]=97;
        buffer[1]=98;
        buffer[2]=99;
        System.out.println("读取了一个字节数组"+ Arrays.toString(buffer));
        return 970;
    }
}
//装饰类 用于扩展原始类的功能
class BufferedInputStream extends InputStream{
    private InputStream is;
    public BufferedInputStream(InputStream is){
        this.is=is;
    }
    @Override
    public int read() {
        System.out.println("提供8KB的缓冲区");
        return is.read();
    }

    @Override
    public int read(Byte[] buffer) {
        System.out.println("提供8KB的缓冲区");
        return is.read(buffer);
    }
}
