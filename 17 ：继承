继承-是什么？
使用关键字：extends 使一个类与另一个类建立父子关系
Public class student extends people{}
Student：子类（派生类）
people：父类（基类，超类）；
作用：子类继承父类之后，就可以直接使用父类公共的属性与方法了

继承的好处：提高了代码的复用性。减少代码冗余，增强类的功能扩展性。

继承-设计规范：
子类们的相同特征（共性属性，共性方法）放在父类中定义，子类独有的属性与行为应该定义在子类里面。

继承的特点

1：子类可以继承父类的属性与行为，但子类不能继承父类的构造器。
2：Java是单继承
3：Java可以多代继承
4：所有类都是Object类的子类.
5：子类继承父类的私有成员？
无论父类中的成员变量是pirvate、public还是其它类型的，子类都会拥有（继承）父类中的这些成员变量。
但是父类中的私有成员变量，无法在子类中直接访问，
可以通过从父类中继承得到的protected、public方法（如getter、setter方法）来访问。
6：子类是否可以继承父类的静态成员？
我认为不可以，static 后的成员是唯一的共享的 子类的对象当然可以调用，修改，但是不代表继承了。

继承后-成员变量与成员方法的访问的特点：
在子类方法中访问成员（成员方法，成员变量）满足：就近原则。
1：先子类局部范围找。
2：然后子类的成员范围找
3：然后父类的范围找，如果父类的范围没有找到就报错。

注意：在父子类中出现重名变量后，优先使用子类的变量，此时如果一定要在子类中访问父类的同名成员，可使用关键字->super.变量名

继承后的方法重写：
什么是方法重写：子类出现了与父类中一样的方法声明，称子类的这个方法是重写的方法。

方法重写的应用场景：
子类需要父类中的方法，但是，父类中的 方法不能完全满足子类的要求时，子类可以重写父类的方法 ，改变父类方法的功能。

方法重写的注意事项与要求：
重写方法的名称，形参列表不能改变，
私有方法不能被重写
子类重写父类的方法时，访问权限必修大于或等于父类
子类不能重写父类的静态方法，会报错。

方法重写建议添加@Override注解
@Override用于校验重写是否出错，一般于编译阶段显示错误，

继承后-子类构造器的特点：
子类中的所有构造器都会默认先访问父类中的无参构造器，再执行自己。
子类初始化之前，一定要调用父类的构造器先完成父类数据空间的初始化，

注意：每个子类的构造器的第一行默认都有super()存在，自己写不写无所谓。

继承后-子类构造器访问父类的有参构造器
1：使用super调用父类的有参构造器，用于初始化继承自父类的数据。
2：如果父类中没有无参构造器，只有有参构造器，会报错，因为子类默认是调用父类的无参构造器
3：使用super（）手动调用父类的有参构造器。


